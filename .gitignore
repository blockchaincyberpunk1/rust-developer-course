# Rust-specific
/target
**/*.rs.bk

# Generated files
Cargo.lock

# Remove Cargo.lock from .gitignore if creating an executable, leave it for libraries
# More information here: https://doc.rust-lang.org/cargo/guide/cargo-toml-vs-cargo-lock.html

# Build Scripts
**/target/

# Dependency directories
**/.cargo/

# The `Cargo.lock` file is important for binary projects to ensure reproducible builds
# but is not necessary for libraries.
# If you are building a library, you may want to uncomment and add this file to your .gitignore
# Cargo.lock

# FFI (Foreign Function Interface) generated files
**/*.ffi.rs

# Backup files generated by the Rust language server (RLS)
**/*.rs.bk

# Environment configuration files (for IDEs like Visual Studio Code, for example)
**/.env
**/.vscode/

# System-specific
.DS_Store
Thumbs.db

# Documentation
/target/doc/

# This file contains a list of all files that are included in the package.
**/Cargo.lock

# If you're using a coverage tool, ignore the output
**/coverage/

# Ignore the database if you're using Diesel
**/*.db

# Ignore Vim/Emacs swap files
[._]*.swp
[._]swo
*~

# Ignore all log files
*.log

# Node.js dependencies folder if using WASM with Rust
node_modules/

# If you're using SQLite with Diesel, uncomment the following line:
# *.db

# If you're using dotenv, you may want to ignore .env files:
# .env

# Ignore the build directory for wasm-pack
/pkg/

# Uncomment the following line if you are using IntelliJ based IDEs
# .idea/

/articles
/guides
/infographics
/presentations

